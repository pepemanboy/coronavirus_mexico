{"version":3,"sources":["App.js","index.js"],"names":["App","confirmed_url","deaths_url","recovered_url","useState","labels","series","datasets","plotData","setPlotData","getData","url","a","fetch","response","reader","body","getReader","read","key","result","decoder","TextDecoder","csv","decode","value","results","Papa","parse","header","rows","data","mexico","find","val","idx","mexico_data","match","date","Date","date_str","getDate","getMonth","push","parseInt","confirmed_data","deaths_data","recovered_data","label","fill","borderColor","useEffect","getAllData","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAgFeA,MA5Ef,WAEE,IAAMC,EAAgB,mJAChBC,EAAa,gJACbC,EAAgB,mJAJT,EAMaC,mBAAS,MANtB,gCAQeA,mBAAS,CAACC,OAAO,GAAIC,OAAO,MAR3C,gCASmBF,mBAAS,CAACC,OAAO,GAAIE,SAAU,MATlD,mBASNC,EATM,KASIC,EATJ,cAWEC,EAXF,8EAWb,WAAuBC,GAAvB,qCAAAC,EAAA,sEACyBC,MAAMF,GAD/B,cACQG,EADR,OAEQC,EAASD,EAASE,KAAKC,YAF/B,SAGuBF,EAAOG,OAH9B,OAUE,IAAWC,KAPLC,EAHR,OAIQC,EAAU,IAAIC,YAAY,SAC1BC,EAAMF,EAAQG,OAAOJ,EAAOK,OAC5BC,EAAUC,IAAKC,MAAML,EAAK,CAACM,QAAQ,IACnCC,EAAOJ,EAAQK,KACfC,EAASF,EAAKG,MAAK,SAACC,EAAKC,GAAS,MAAiC,WAA1BD,EAAI,qBAC7CE,EAAc,CAAC/B,OAAO,GAAI0B,KAAM,IACpBC,EACZb,EAAIkB,MAAM,qBACNC,EAAO,IAAIC,KAAKpB,GAChBqB,EAAWF,EAAKG,UAAY,KAAQH,EAAKI,WAAa,GAC5DN,EAAY/B,OAAOsC,KAAKH,GACxBJ,EAAYL,KAAKY,KAAKC,SAASZ,EAAOb,MAf5C,yBAkBSiB,GAlBT,6CAXa,kEAgCb,oCAAAxB,EAAA,sEAC+BF,EAAQT,GADvC,cACQ4C,EADR,gBAE4BnC,EAAQR,GAFpC,cAEQ4C,EAFR,gBAG+BpC,EAAQP,GAHvC,OAGQ4C,EAHR,OAKQ1C,EAASwC,EAAexC,OAExB0B,EAAO,CACX1B,OAAQA,EACRE,SAAU,CACR,CACEyC,MAAO,oBACPC,MAAM,EACNC,YAAa,UACbnB,KAAMc,EAAed,MAEvB,CACEiB,MAAO,cACPC,MAAM,EACNC,YAAa,UACbnB,KAAMgB,EAAehB,MAEvB,CACEiB,MAAO,UACPC,MAAM,EACNC,YAAa,UACbnB,KAAMe,EAAYf,QAIxBtB,EAAYsB,GA9Bd,6CAhCa,sBAqEb,OAJAoB,qBAAU,YAjEG,mCAkEXC,KACC,IAGD,yBAAKC,UAAU,OACb,kBAAC,IAAD,CAAMtB,KAAMvB,MCvElB8C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.82d8c432.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Papa from 'papaparse'\nimport {Line} from 'react-chartjs-2';\n\nfunction App() {\n\n  const confirmed_url = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv\"\n  const deaths_url = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv\";\n  const recovered_url = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv\";\n\n  const [error, setError] = useState(\"Ok\");\n\n  const [series, setSeries] = useState({labels:[], series:[]});\n  const [plotData, setPlotData] = useState({labels:[], datasets: []});\n\n  async function getData(url) {\n    const response = await fetch(url);\n    const reader = response.body.getReader();\n    const result = await reader.read();\n    const decoder = new TextDecoder('utf-8');\n    const csv = decoder.decode(result.value);\n    const results = Papa.parse(csv, {header: true});\n    const rows = results.data;\n    const mexico = rows.find((val, idx) => {return val[\"Country/Region\"] === \"Mexico\"})\n    const mexico_data = {labels:[], data: []};\n    for (const key in mexico) {\n      if (key.match(/\\d*\\/\\d*\\/\\d*/ig)) {\n        const date = new Date(key);\n        const date_str = date.getDate() + \"/\" +  (date.getMonth() + 1);\n        mexico_data.labels.push(date_str);\n        mexico_data.data.push(parseInt(mexico[key]));\n      }\n    }\n    return mexico_data;\n  }\n\n  async function getAllData() {\n    const confirmed_data = await getData(confirmed_url);\n    const deaths_data = await getData(deaths_url);\n    const recovered_data = await getData(recovered_url);\n\n    const labels = confirmed_data.labels;\n\n    const data = {\n      labels: labels,\n      datasets: [\n        {\n          label: 'Casos confirmados',\n          fill: false,\n          borderColor: '#17579B',\n          data: confirmed_data.data,\n        },\n        {\n          label: 'Recuperados',\n          fill: false,\n          borderColor: '#67A3D2',\n          data: recovered_data.data,\n        },\n        {\n          label: 'Muertes',\n          fill: false,\n          borderColor: '#363537',\n          data: deaths_data.data,\n        },\n      ]\n    };\n    setPlotData(data);\n  }\n\n  useEffect(()=> {\n    getAllData();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Line data={plotData}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}